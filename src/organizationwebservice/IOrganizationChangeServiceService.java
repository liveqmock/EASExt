package organizationwebservice;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import com.creditease.eas.util.consts.AddressConfig;
/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * IOrganizationChangeServiceService service = new IOrganizationChangeServiceService();
 * OrganizationService portType = service.getOrganizationServicePort();
 * portType.queryOrganizationChangeFromHRToOA(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "IOrganizationChangeServiceService", targetNamespace = "organizationWebService", wsdlLocation = AddressConfig.ORGWSDLLOCATION)
public class IOrganizationChangeServiceService extends Service {

	private final static URL IORGANIZATIONCHANGESERVICESERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(organizationwebservice.IOrganizationChangeServiceService.class
					.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = organizationwebservice.IOrganizationChangeServiceService.class
					.getResource(".");
			url = new URL(
					baseUrl,
					AddressConfig.ORGWSDLLOCATION);
		} catch (MalformedURLException e) {
			logger
					.warning("Failed to create URL for the wsdl Location: 'http://10.105.18.140:6090/OrganizationChange/services/OrganizationChangeService?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		IORGANIZATIONCHANGESERVICESERVICE_WSDL_LOCATION = url;
	}

	public IOrganizationChangeServiceService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public IOrganizationChangeServiceService() {
		super(IORGANIZATIONCHANGESERVICESERVICE_WSDL_LOCATION, new QName(
				"organizationWebService", "IOrganizationChangeServiceService"));
	}

	/**
	 * 
	 * @return returns OrganizationService
	 */
	@WebEndpoint(name = "organizationServicePort")
	public OrganizationService getOrganizationServicePort() {
		return super.getPort(new QName("organizationWebService",
				"organizationServicePort"), OrganizationService.class);
	}

}
